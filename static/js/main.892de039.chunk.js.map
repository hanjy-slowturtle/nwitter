{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","alt","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","files","length","theFile","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","unsubscribe","orderBy","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","makeSmallUser","user","args","onAuthStateChanged","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.892de039.chunk.js","sourcesContent":["// Firebase App (the core Firebase SDK) is always required and\r\n// must be listed before other Firebase SDKs\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value }\r\n        } = event;\r\n        if(name === 'email') {\r\n            setEmail(value);\r\n        } else if(name === 'password') {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount) {\r\n                // create account\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email, password\r\n                );\r\n            } else {\r\n                // log in\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email, password\r\n                );\r\n            }\r\n            console.log(data);\r\n        } catch(error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n                    className=\"authInput authSubmit\"\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import { faGithub, faGoogle, faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport React from 'react';\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name }\r\n        } = event;\r\n\r\n        let provider;\r\n        if(name === 'google') {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === 'github') {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button\r\n                    onClick={onSocialClick}\r\n                    name=\"google\"\r\n                    className=\"authBtn\"\r\n                >\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button\r\n                    onClick={onSocialClick}\r\n                    name=\"github\"\r\n                    className=\"authBtn\"\r\n                >\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { faPencilAlt, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm('Are you sure you want to delete this nweet?');\r\n        if(ok) {\r\n            // delete nweet\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if(nweetObj.attachmentUrl !== '') {\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n            }\r\n        }\r\n    };\r\n    const toggleEditing = () => {\r\n        setEditing((prev) => !prev);\r\n        setNewNweet(nweetObj.text);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {\r\n                editing\r\n                ? (\r\n                    <>\r\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Edit your nweet\"\r\n                                value={newNweet}\r\n                                required\r\n                                onChange={onChange}\r\n                                autoFocus\r\n                                className=\"formInput\"\r\n                            />\r\n                            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                        </form>\r\n                        <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                            Cancel\r\n                        </button>\r\n                    </>\r\n                ) \r\n                : (\r\n                    <>\r\n                        <h4>{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} alt=\"\" />}\r\n                        {isOwner && (\r\n                            <div class=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState('');\r\n    const [attachment, setAttachment] = useState('');\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(nweet === '') {\r\n            return;\r\n        }\r\n        let attachmentUrl = '';\r\n        if(attachment !== '') {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, 'data_url');\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n\r\n        await dbService.collection('nweets').add(nweetObj);\r\n        setNweet('');\r\n        setAttachment('');\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        if(files.length === 0) {\r\n            return;\r\n        }\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment('');\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                        alt=\"\"\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import Nweet from 'components/Nweet';\r\nimport { dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport NweetFactory from 'components/NweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = dbService.collection('nweets').orderBy('createdAt', 'desc').onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUser } from '@fortawesome/free-regular-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navigation = ({ userObj }) => (\r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                            ? `${userObj.displayName}의 Profile`\r\n                            : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default Navigation;","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push('/');\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    autoFocus\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Navigation from 'components/Navigation';\r\nimport Profile from 'routes/Profile';\r\n\r\nconst AppRouter = ({ userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {userObj && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {userObj\r\n                ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  const makeSmallUser = (user) => {\n    return {\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    };\n  };\n  const refreshUser = () => {\n    setUserObj(makeSmallUser(authService.currentUser));\n  };\n\n  useEffect(() => {\n    const unsubscribe = authService.onAuthStateChanged((user) => {\n      if(user) {\n        setUserObj(makeSmallUser(user));\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n\n    return () => {\n      unsubscribe();\n    }\n  }, []);\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          userObj={userObj}\n          refreshUser={refreshUser}\n        /> \n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}